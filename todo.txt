Внедрить в траекторию дуги.

Сделать примитивные траектории: круг. Чтобы можно было и ему задавать перемычку

Траекториям оставить только список точек. Сделать специальные классы для генерации из траекторий Г-кода (стратегии): внутри контура, снаружи, по линии контура, по площади (только замкнутые контуры).

При чтении svg учитывать _несколько_ замкнутых контуров. А как это выводить в gcode (прыжки между контурами)? Надо в gcode указывать еще безопасную высоту.
	И сделать новый тип отрезка (переход).
	Минус - будут лишние перемещения.

Сделать матрицу трансформации: сдвиг, масштаб, поворот. и передавать при предварительном просмотре и при генерации Г-кода.

Сделать у preview2D несколько именованных параметров: scale, scroll_x, scroll_y и color (цвет траектории, чтобы можно было различать)

вырезание со смещением (внутри и снаружи). Делать универсально (из Trajectory).
Режим 2D "показать деталь" с учетом обработки фрезой

при создании дуг, рассчитывать шаг угла, исходя из минимально нужного отрезка??? (какой смысл генерить кучу отрезков по 0.001мм)

наклонное врезание

Переделать отрисовку так, чтобы указывать методу канву в качестве параметра.

При первой визуализации, зум должен посчитаться автоматически, чтобы вся УП поместилась на экран

Доработать Viewer:
- ограничители приближения-удаления
- несколько стандартных положений (слева, справа, сверху, в изометрии)
- включение/отключение перспективы
- нормальная математика для камеры

Класс Player. Тот же Viewer, но для визуализации *процесса* обработки.

Нормальный редактор с окошком визуализации, как в OpenScada.

Коды G2, G3 и обертку для них с понятными параметрами.

